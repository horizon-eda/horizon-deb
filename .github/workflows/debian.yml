name: Build Debian packages

on:
  push:
    branches: [ '*' ]
    tags: [ '*' ]
  pull_request:
    branches: [ master ]

env:
  HORIZON_VERSION: 1.4.90
  HORIZON_PKG_VERSION: 1
  DEBIAN_FRONTEND: noninteractive
  LANG: en_US.UTF-8

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: 
          - distro: debian
            release: buster
          - distro: debian
            release: bullseye
          - distro: ubuntu
            release: bionic
          - distro: ubuntu
            release: focal
          - distro: ubuntu
            release: groovy
          - distro: ubuntu
            release: hirsute
    runs-on: ubuntu-latest
    container: ${{ matrix.os.distro }}:${{ matrix.os.release }}
    steps:
    - name: check if master branch
      if: ${{ github.ref == 'refs/heads/packagecloud' }}
      run: echo "Building tag ${{ github.ref }}"
    - name: update apt cache
      run: apt-get update
    - name: generate locales
      run: |
        apt-get install -y locales
        locale-gen ${{ env.LANG }}
    - name: install dependencies
      run: apt-get install -y git build-essential libsqlite3-dev util-linux librsvg2-dev libcairomm-1.0-dev libepoxy-dev libgtkmm-3.0-dev uuid-dev libboost-dev  libzmq5 libzmq3-dev libglm-dev libgit2-dev libcurl4-gnutls-dev liboce-ocaf-dev libpodofo-dev python3 libzip-dev git libdxflib-dev
    - name: install build utils
      run: apt-get install -y devscripts build-essential lintian wget debhelper curl jq
    - name: get distro id
      run: |
        curl https://${{ secrets.PACKAGECLOUD_API_TOKEN }}:@packagecloud.io/api/v1/distributions.json | \
        jq -r '"DISTRO_ID=" + (.deb[] | select(.index_name == "${{ matrix.os.distro }}")  | .versions[] | select(.index_name == "${{ matrix.os.release }}") | .id | tostring)' | \
        tee -a $GITHUB_ENV
        
    - uses: actions/checkout@v2
    - name: download tarball
      run: wget https://github.com/horizon-eda/horizon/archive/refs/tags/${HORIZON_VERSION}.tar.gz -O horizon-eda-upstream_${HORIZON_VERSION}.orig.tar.gz

    - name: unpack tarball and add debian directory
      run: |
        tar xzf horizon-eda-upstream_${HORIZON_VERSION}.orig.tar.gz
        mv horizon-${HORIZON_VERSION} horizon-eda-upstream-${HORIZON_VERSION}
        cp -r debian horizon-eda-upstream-${HORIZON_VERSION}

    - name: run debuild
      run: debuild -uc -us
      working-directory: horizon-eda-upstream-${{ env. HORIZON_VERSION }}

    - name: list files
      run: ls
    - name: upload debian packages
      uses: actions/upload-artifact@v2-preview
      with:
        name: packages-${{ matrix.os.distro }}-${{ matrix.os.release }}
        path: ./*.*deb
    - name: upload debian source files
      uses: actions/upload-artifact@v2-preview
      with:
        name: source-packages-${{ matrix.os.distro }}-${{ matrix.os.release }}
        path: |
          *.dsc
          *.debian.tar.*
          *.orig.tar.*
    - name: Push to packagecloud
      if: ${{ github.ref == 'refs/heads/master' }}
      run: |
        curl -X POST https://${{ secrets.PACKAGECLOUD_API_TOKEN }}:@packagecloud.io/api/v1//repos/horizon-eda/horizon-eda/packages.json  -F "package[distro_version_id]=${{ env.DISTRO_ID }}"  -F "package[package_file]=@horizon-eda-upstream_${{ env.HORIZON_VERSION }}-${{ env.HORIZON_PKG_VERSION }}_amd64.deb"
#        curl -X POST https://${{ secrets.PACKAGECLOUD_API_TOKEN }}:@packagecloud.io/api/v1//repos/horizon-eda/horizon-eda/packages.json  -F "package[distro_version_id]=${{ env.DISTRO_ID }}"  -F "package[package_file]=@$(echo horizon-eda-upstream-dbgsym_${{ env.HORIZON_VERSION }}-${{ env.HORIZON_PKG_VERSION }}_amd64.*deb)"
